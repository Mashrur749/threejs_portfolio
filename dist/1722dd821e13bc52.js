import"../style.css";import*as THREE from"three";import vertexShader from"./shaders/vertexShader.glsl";import fragmentShader from"./shaders/fragmentShader.glsl";import{TextGeometry}from"three/examples/jsm/geometries/TextGeometry";import{FontLoader}from"three/examples/jsm/loaders/FontLoader";import{CSS3DObject}from"three/examples/jsm/renderers/CSS3DRenderer.js";let scrollable=document.querySelector(".scrollable");const imageElements=document.querySelectorAll(".bit-map-images");let current=0,target=0,ease=.075;function lerp(e,t,s){return e*(1-s)+t*s}function init(){document.body.style.height=`${scrollable.getBoundingClientRect().height}px`}function smoothScroll(){target=window.scrollY,current=lerp(current,target,ease),scrollable.style.transform=`translateY(${-current}px)`}class Environment{constructor(){this.container=document.querySelector("main"),this.images=[...imageElements],this.headerTextMesh=null,this.meshItems=[],this.setupCamera(),this.createImageMeshItems(),this.render()}get viewport(){let e=window.innerWidth,t=window.innerHeight;return{width:e,height:t,aspectRatio:e/t}}setupCamera(){window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.scene=new THREE.Scene;const e=2*Math.atan(window.innerHeight/2/1e3)*180/Math.PI;this.camera=new THREE.PerspectiveCamera(e,this.viewport.aspectRatio,1,1e3),this.camera.position.set(0,0,1e3),this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.viewport.width,this.viewport.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.container.appendChild(this.renderer.domElement)}onWindowResize(){init(),this.camera.aspect=this.viewport.aspectRatio,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.viewport.width,this.viewport.height)}createHeaderText(){this.headerTextMesh=new MeshTextItem(document.getElementById("header-text"),this.scene)}createImageMeshItems(){this.images.forEach((e=>{let t=new ImageMappedShader(e,this.scene);this.meshItems.push(t)}))}render(){smoothScroll();for(let e=0;e<this.meshItems.length;e++)this.meshItems[e].render();this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.render.bind(this))}}class MeshItem{constructor(e,t){this.element=e,this.scene=t,this.offset=new THREE.Vector2(0,0),this.sizes=new THREE.Vector2(0,0),this.createMesh()}setDimensions(){const{width:e,height:t,top:s,left:i}=this.element.getBoundingClientRect();this.sizes.set(e,t),this.offset.set(i-window.innerWidth/2+e/2,-s+window.innerHeight/2-t/2)}}class MeshTextItem extends MeshItem{constructor(e,t){super(e,t),this.createMesh()}createMesh(){this.fontLoader=new FontLoader,this.fontLoader.load("/fonts/helvetiker_regular.typeface.json",(e=>{const t=new TextGeometry("Welcome to My Portfolio. \n ~Mashrur",{font:e,size:.5,height:.2,curveSegments:5,bevelEnabled:!0,bevelThickness:.02,bevelSize:.02,bevelOffset:0,bevelSegments:4},(()=>{}),(e=>{console.log(e)}));t.center();const s=new THREE.MeshNormalMaterial({});this.mesh=new THREE.Mesh(t,s),this.setDimensions(),this.render(),this.scene.add(this.mesh)}))}render(){const{width:e,height:t,top:s,left:i}=this.element.getBoundingClientRect();this.mesh&&(this.setDimensions(),this.mesh.position.set(this.offset.x,this.offset.y,0),this.mesh.scale.set(this.sizes.x,this.sizes.y,1))}}class ImageMappedShader extends MeshItem{constructor(e,t){super(e,t)}createMesh(){this.geometry=new THREE.PlaneBufferGeometry(1,1,100,100),this.imageTexture=(new THREE.TextureLoader).load(this.element.src),this.uniforms={uTexture:{value:this.imageTexture},uOffset:{value:new THREE.Vector2(0,0)},uAlpha:{value:1}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader,fragmentShader,transparent:!0,side:THREE.DoubleSide}),this.mesh=new THREE.Mesh(this.geometry,this.material),this.setDimensions(),this.mesh.scale.set(this.sizes.x,this.sizes.y,1),this.scene.add(this.mesh)}render(){this.setDimensions(),this.mesh.position.set(this.offset.x,this.offset.y,0),this.mesh.scale.set(this.sizes.x,this.sizes.y,1),this.uniforms.uOffset.value.set(0*this.offset.x,3e-4*-(target-current))}}function make3DElementObject(e,t,s){const i=new THREE.Object3D,r=document.createElement(e);r.style.width=t+"px",r.style.height=s+"px",r.style.opacity=.999,r.style.boxSizing="border-box";var n=new CSS3DObject(r);i.css3dObject=n,i.add(n);var h=new THREE.MeshPhongMaterial({opacity:.15,color:new THREE.Color(1118481),blending:THREE.NoBlending}),o=new THREE.BoxGeometry(t,s,1),a=new THREE.Mesh(o,h);return a.castShadow=!0,a.receiveShadow=!0,i.lightShadowMesh=a,i.add(a),i}init(),new Environment;